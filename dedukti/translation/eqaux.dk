def sym : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (a => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (b => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda__Builtin__Equality.{|!_≡_|} univ.0 A a b) (_0 => (Agda__Builtin__Equality.{|!_≡_|} univ.0 A b a))))))))).
[A, a] sym A a a (Agda__Builtin__Equality.{|!_≡___refl|} {univ.0} A a) --> Agda__Builtin__Equality.{|!_≡___refl|} univ.0 A a.
 
def trans : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A ({|!z|} => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda__Builtin__Equality.{|!_≡_|} univ.0 A x y) (_0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda__Builtin__Equality.{|!_≡_|} univ.0 A y {|!z|}) (_0 => (Agda__Builtin__Equality.{|!_≡_|} univ.0 A x {|!z|}))))))))))))).
[A, x0, y, x] trans A x0 y y x (Agda__Builtin__Equality.{|!_≡___refl|} {univ.0} A y) --> x.
 
def cong : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.code (Agda.set univ.0)) (B => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (x => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (y => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set univ.0) A (_0 => B)) (f => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (Agda__Builtin__Equality.{|!_≡_|} univ.0 A x y) (_0 => (Agda__Builtin__Equality.{|!_≡_|} univ.0 B (f x) (f y)))))))))))))).
[A, B, x, f] cong A B x x f (Agda__Builtin__Equality.{|!_≡___refl|} {univ.0} A x) --> Agda__Builtin__Equality.{|!_≡___refl|} univ.0 B (f x).
 
def J : Agda.Term Agda.sortOmega (Agda.qLevel (l => Agda.sortOmega) (l => Agda.qLevel ({|!l'|} => Agda.set (univ.max univ.0 (univ.max (univ.s l) (univ.s {|!l'|})))) ({|!l'|} => Agda.prod (Agda.set (univ.s l)) (Agda.set (univ.max univ.0 (univ.max l (univ.s {|!l'|})))) (Agda.code (Agda.set l)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max l (univ.s {|!l'|})))) (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) (Agda.prod (Agda.set l) (Agda.set (univ.max univ.0 (univ.max l (univ.s {|!l'|})))) A (a => (Agda.prod (Agda.set l) (Agda.set (univ.max univ.0 (univ.max l (univ.s {|!l'|})))) A (b => (Agda.prod (Agda.set l) (Agda.set (univ.s {|!l'|})) (Agda__Builtin__Equality.{|!_≡_|} l A a b) (_0 => (Agda.code (Agda.set {|!l'|})))))))) (P => (Agda.prod (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) (Agda.prod (Agda.set l) (Agda.set {|!l'|}) A (a => (P a a (Agda__Builtin__Equality.{|!_≡___refl|} l A a)))) (_0 => (Agda.prod (Agda.set l) (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) A (a => (Agda.prod (Agda.set l) (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) A (b => (Agda.prod (Agda.set l) (Agda.set {|!l'|}) (Agda__Builtin__Equality.{|!_≡_|} l A a b) (p => (P a b p))))))))))))))).
def {|!'extendedlambda0|} : Agda.Term Agda.sortOmega (Agda.qLevel (l => Agda.sortOmega) (l => Agda.qLevel ({|!l'|} => Agda.set (univ.max univ.0 (univ.max (univ.s l) (univ.s {|!l'|})))) ({|!l'|} => Agda.prod (Agda.set (univ.s l)) (Agda.set (univ.max univ.0 (univ.max l (univ.s {|!l'|})))) (Agda.code (Agda.set l)) (A => (Agda.prod (Agda.set (univ.max univ.0 (univ.max l (univ.s {|!l'|})))) (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) (Agda.prod (Agda.set l) (Agda.set (univ.max univ.0 (univ.max l (univ.s {|!l'|})))) A (a => (Agda.prod (Agda.set l) (Agda.set (univ.max univ.0 (univ.max l (univ.s {|!l'|})))) A (b => (Agda.prod (Agda.set l) (Agda.set (univ.s {|!l'|})) (Agda__Builtin__Equality.{|!_≡_|} l A a b) (_0 => (Agda.code (Agda.set {|!l'|})))))))) (P => (Agda.prod (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) (Agda.prod (Agda.set l) (Agda.set {|!l'|}) A (a => (P a a (Agda__Builtin__Equality.{|!_≡___refl|} l A a)))) (_0 => (Agda.prod (Agda.set l) (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) A (a => (Agda.prod (Agda.set l) (Agda.set (univ.max univ.0 (univ.max l {|!l'|}))) A (b => (Agda.prod (Agda.set l) (Agda.set {|!l'|}) (Agda__Builtin__Equality.{|!_≡_|} l A a b) (p => (P a b p))))))))))))))).
[l, {|!l'|}, A, P, x, a, b, p] J l {|!l'|} A P x a b p --> {|!'extendedlambda0|} l {|!l'|} A P x a b p.
 
[l, {|!l'|}, A, P, x, a] {|!'extendedlambda0|} l {|!l'|} A P x a a (Agda__Builtin__Equality.{|!_≡___refl|} l A a) --> x a.
 
def leib : Agda.Term (Agda.set (univ.s univ.0)) (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set (univ.s univ.0)) (Agda.code (Agda.set univ.0)) (A => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (a => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (b => (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) (Agda__Builtin__Equality.{|!_≡_|} univ.0 A a b) (_0 => (Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (_0 => (Agda.code (Agda.set univ.0)))) (P => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (P a) (_0 => (P b))))))))))))).
[A, a, b, x0, P, x] leib A a b x0 P x --> J univ.0 (univ.s univ.0) A (a0 => b0 => p => Agda.prod (Agda.set (univ.s univ.0)) (Agda.set univ.0) (Agda.prod (Agda.set univ.0) (Agda.set (univ.s univ.0)) A (_0 => (Agda.code (Agda.set univ.0)))) (P0 => (Agda.prod (Agda.set univ.0) (Agda.set univ.0) (P0 a0) (_0 => (P0 b0))))) (a0 => P0 => x1 => x1) a b x0 P x.
 
