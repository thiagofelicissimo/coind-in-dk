require open AgdaTheory.noEta.Base;
require open AgdaTheory.Levels;

require tests.Agda__Builtin__Equality as Agda__Builtin__Equality;
symbol sym : El (set (s (sₙ 0ₙ) z)) (⇝ (set (s (sₙ 0ₙ) z)) (set (s 0ₙ z)) (⋄ (set (s 0ₙ z))) (λ A, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) A (λ a, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) A (λ b, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) A a b) (λ _0, (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) A b a)))))))));
rule sym $A $a _ (Agda__Builtin__Equality.{|!_≡___refl|} _ _ _) ↪ Agda__Builtin__Equality.{|!_≡___refl|} (s 0ₙ z) $A $a;
 
symbol trans : El (set (s (sₙ 0ₙ) z)) (⇝ (set (s (sₙ 0ₙ) z)) (set (s 0ₙ z)) (⋄ (set (s 0ₙ z))) (λ A, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) A (λ x, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) A (λ y, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) A (λ {|!z|}, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) A x y) (λ _0, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) A y {|!z|}) (λ _0, (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) A x {|!z|})))))))))))));
rule trans $A $x0 $y _ $x (Agda__Builtin__Equality.{|!_≡___refl|} _ _ _) ↪ $x;
 
symbol cong : El (set (s (sₙ 0ₙ) z)) (⇝ (set (s (sₙ 0ₙ) z)) (set (s (sₙ 0ₙ) z)) (⋄ (set (s 0ₙ z))) (λ A, (⇝ (set (s (sₙ 0ₙ) z)) (set (s 0ₙ z)) (⋄ (set (s 0ₙ z))) (λ B, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) A (λ x, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) A (λ y, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) A (λ _0, B)) (λ f, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) A x y) (λ _0, (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) B (f x) (f y))))))))))))));
rule cong $A $B $x _ $f (Agda__Builtin__Equality.{|!_≡___refl|} _ _ _) ↪ Agda__Builtin__Equality.{|!_≡___refl|} (s 0ₙ z) $B ($f $x);
 
symbol J : El setω (∀ (λ l, setω) (λ l, ∀ (λ {|!l'|}, set ((s 0ₙ z) ⊕ ((s (sₙ 0ₙ) (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) (λ {|!l'|}, ⇝ (set (s (sₙ 0ₙ) (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) (⋄ (set (s 0ₙ (l ⊕ z)))) (λ A, (⇝ (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) (⇝ (set (s 0ₙ (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) A (λ a, (⇝ (set (s 0ₙ (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) A (λ b, (⇝ (set (s 0ₙ (l ⊕ z))) (set (s (sₙ 0ₙ) ({|!l'|} ⊕ z))) (Agda__Builtin__Equality.{|!_≡_|} l A a b) (λ _0, (⋄ (set (s 0ₙ ({|!l'|} ⊕ z)))))))))) (λ P, (⇝ (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) (⇝ (set (s 0ₙ (l ⊕ z))) (set (s 0ₙ ({|!l'|} ⊕ z))) A (λ a, (P a a (Agda__Builtin__Equality.{|!_≡___refl|} l A a)))) (λ _0, (⇝ (set (s 0ₙ (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) A (λ a, (⇝ (set (s 0ₙ (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) A (λ b, (⇝ (set (s 0ₙ (l ⊕ z))) (set (s 0ₙ ({|!l'|} ⊕ z))) (Agda__Builtin__Equality.{|!_≡_|} l A a b) (λ p, (P a b p)))))))))))))));
symbol {|!'extendedlambda0|} : El setω (∀ (λ l, setω) (λ l, ∀ (λ {|!l'|}, set ((s 0ₙ z) ⊕ ((s (sₙ 0ₙ) (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) (λ {|!l'|}, ⇝ (set (s (sₙ 0ₙ) (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) (⋄ (set (s 0ₙ (l ⊕ z)))) (λ A, (⇝ (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) (⇝ (set (s 0ₙ (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) A (λ a, (⇝ (set (s 0ₙ (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s (sₙ 0ₙ) ({|!l'|} ⊕ z))))) A (λ b, (⇝ (set (s 0ₙ (l ⊕ z))) (set (s (sₙ 0ₙ) ({|!l'|} ⊕ z))) (Agda__Builtin__Equality.{|!_≡_|} l A a b) (λ _0, (⋄ (set (s 0ₙ ({|!l'|} ⊕ z)))))))))) (λ P, (⇝ (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) (⇝ (set (s 0ₙ (l ⊕ z))) (set (s 0ₙ ({|!l'|} ⊕ z))) A (λ a, (P a a (Agda__Builtin__Equality.{|!_≡___refl|} l A a)))) (λ _0, (⇝ (set (s 0ₙ (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) A (λ a, (⇝ (set (s 0ₙ (l ⊕ z))) (set ((s 0ₙ z) ⊕ ((s 0ₙ (l ⊕ z)) ⊕ (s 0ₙ ({|!l'|} ⊕ z))))) A (λ b, (⇝ (set (s 0ₙ (l ⊕ z))) (set (s 0ₙ ({|!l'|} ⊕ z))) (Agda__Builtin__Equality.{|!_≡_|} l A a b) (λ p, (P a b p)))))))))))))));
rule J $l ${|!l'|} $A $P $x $a $b $p ↪ {|!'extendedlambda0|} $l ${|!l'|} $A $P $x $a $b $p;
 
rule {|!'extendedlambda0|} $l ${|!l'|} $A $P $x $a _ (Agda__Builtin__Equality.{|!_≡___refl|} _ _ _) ↪ $x $a;
 
symbol leib : El (set (s (sₙ 0ₙ) z)) (⇝ (set (s (sₙ 0ₙ) z)) (set (s (sₙ 0ₙ) z)) (⋄ (set (s 0ₙ z))) (λ A, (⇝ (set (s 0ₙ z)) (set (s (sₙ 0ₙ) z)) A (λ a, (⇝ (set (s 0ₙ z)) (set (s (sₙ 0ₙ) z)) A (λ b, (⇝ (set (s 0ₙ z)) (set (s (sₙ 0ₙ) z)) (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) A a b) (λ _0, (⇝ (set (s (sₙ 0ₙ) z)) (set (s 0ₙ z)) (⇝ (set (s 0ₙ z)) (set (s (sₙ 0ₙ) z)) A (λ _0, (⋄ (set (s 0ₙ z))))) (λ P, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) (P a) (λ _0, (P b)))))))))))));
rule leib $A $a $b $x0 $P $x ↪ J (s 0ₙ z) (s (sₙ 0ₙ) z) $A (λ a0, λ b0, λ p, ⇝ (set (s (sₙ 0ₙ) z)) (set (s 0ₙ z)) (⇝ (set (s 0ₙ z)) (set (s (sₙ 0ₙ) z)) $A (λ _0, (⋄ (set (s 0ₙ z))))) (λ P0, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) (P0 a0) (λ _0, (P0 b0))))) (λ a0, λ P0, λ x1, x1) $a $b $x0 $P $x;
 
