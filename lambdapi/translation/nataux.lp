require open AgdaTheory.noEta.Base;
require open AgdaTheory.Levels;

require tests.Agda__Builtin__Equality as Agda__Builtin__Equality;
require tests.Agda__Builtin__Nat as Agda__Builtin__Nat;
require tests.eqaux as eqaux;
symbol {|!z-+|} : El (set (s 0ₙ z)) (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) Agda__Builtin__Nat.Nat (λ x, (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} x Agda__Builtin__Nat.Nat__zero) x)));
rule {|!z-+|} Agda__Builtin__Nat.Nat__zero ↪ Agda__Builtin__Equality.{|!_≡___refl|} (s 0ₙ z) Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} Agda__Builtin__Nat.Nat__zero Agda__Builtin__Nat.Nat__zero);
rule {|!z-+|} (Agda__Builtin__Nat.Nat__suc $x) ↪ eqaux.cong Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} $x Agda__Builtin__Nat.Nat__zero) $x Agda__Builtin__Nat.Nat__suc ({|!z-+|} $x);
 
symbol {|!+-assoc|} : El (set (s 0ₙ z)) (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) Agda__Builtin__Nat.Nat (λ x, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) Agda__Builtin__Nat.Nat (λ y, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) Agda__Builtin__Nat.Nat (λ {|!z|}, (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.{|!_+_|} x y) {|!z|}) (Agda__Builtin__Nat.{|!_+_|} x (Agda__Builtin__Nat.{|!_+_|} y {|!z|})))))))));
rule {|!+-assoc|} Agda__Builtin__Nat.Nat__zero $y ${|!z|} ↪ Agda__Builtin__Equality.{|!_≡___refl|} (s 0ₙ z) Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.{|!_+_|} Agda__Builtin__Nat.Nat__zero $y) ${|!z|});
rule {|!+-assoc|} (Agda__Builtin__Nat.Nat__suc $x) $y ${|!z|} ↪ eqaux.cong Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.{|!_+_|} $x $y) ${|!z|}) (Agda__Builtin__Nat.{|!_+_|} $x (Agda__Builtin__Nat.{|!_+_|} $y ${|!z|})) Agda__Builtin__Nat.Nat__suc ({|!+-assoc|} $x $y ${|!z|});
 
symbol {|!+-com|} : El (set (s 0ₙ z)) (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) Agda__Builtin__Nat.Nat (λ x, (⇝ (set (s 0ₙ z)) (set (s 0ₙ z)) Agda__Builtin__Nat.Nat (λ y, (Agda__Builtin__Equality.{|!_≡_|} (s 0ₙ z) Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} x y) (Agda__Builtin__Nat.{|!_+_|} y x))))));
rule {|!+-com|} Agda__Builtin__Nat.Nat__zero $y ↪ eqaux.sym Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} $y Agda__Builtin__Nat.Nat__zero) (Agda__Builtin__Nat.{|!_+_|} Agda__Builtin__Nat.Nat__zero $y) ({|!z-+|} $y);
rule {|!+-com|} (Agda__Builtin__Nat.Nat__suc $x) Agda__Builtin__Nat.Nat__zero ↪ {|!z-+|} (Agda__Builtin__Nat.Nat__suc $x);
rule {|!+-com|} (Agda__Builtin__Nat.Nat__suc $x) (Agda__Builtin__Nat.Nat__suc $y) ↪ eqaux.trans Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.Nat__suc $x) (Agda__Builtin__Nat.Nat__suc $y)) (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} $x $y))) (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.Nat__suc $y) (Agda__Builtin__Nat.Nat__suc $x)) (eqaux.trans Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.Nat__suc $x) (Agda__Builtin__Nat.Nat__suc $y)) (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.Nat__suc $y) $x)) (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} $x $y))) (eqaux.cong Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} $x (Agda__Builtin__Nat.Nat__suc $y)) (Agda__Builtin__Nat.{|!_+_|} (Agda__Builtin__Nat.Nat__suc $y) $x) Agda__Builtin__Nat.Nat__suc ({|!+-com|} $x (Agda__Builtin__Nat.Nat__suc $y))) (eqaux.cong Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.{|!_+_|} $y $x) (Agda__Builtin__Nat.{|!_+_|} $x $y) (λ x0, Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.Nat__suc x0)) ({|!+-com|} $y $x))) (eqaux.cong Agda__Builtin__Nat.Nat Agda__Builtin__Nat.Nat (Agda__Builtin__Nat.Nat__suc (Agda__Builtin__Nat.{|!_+_|} $x $y)) (Agda__Builtin__Nat.{|!_+_|} $y (Agda__Builtin__Nat.Nat__suc $x)) Agda__Builtin__Nat.Nat__suc ({|!+-com|} (Agda__Builtin__Nat.Nat__suc $x) $y));
 
